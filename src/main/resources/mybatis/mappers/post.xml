<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="post">

	<insert id="insert" parameterType="reviewvo">
		<![CDATA[
			INSERT 
			  INTO POST (POST_SEQ,  title, contents,  REVIEW_PUB_YN,  USR_SEQ,  TRV_SEQ)
			values ( null, #{title}, #{contents}, #{reviewPubYn}, #{usrSeq}, #{trvSeq} )
		]]>
	</insert>

	<insert id="addPost" parameterType="reviewvo">
		<selectKey keyProperty="postSeq" resultType="integer" order="BEFORE">
			<![CDATA[
			select auto_increment
			  from information_schema.tables
			 where table_schema='bengal'
			   and table_name='post'
			]]>
		</selectKey>
		<![CDATA[
			insert into
				post 
				values(#{postSeq },
						#{title }, 
						#{contents }, 
						#{reviewPubYn },
						#{usrSeq }, 
						#{trvSeq },
						now(),
						#{hidden })
		]]>
	</insert>
	
	
	<update id="updatePost" parameterType="reviewvo">
		
		<![CDATA[
		update post 
			set contents =#{contents}, 
			title =#{title}, 
			REVIEW_PUB_YN =#{reviewPubYn}, 
			hidden=#{hidden},
			trv_seq=#{trvSeq}
		where post_seq = #{postSeq} and USR_SEQ= #{usrSeq}
		]]>
	</update>

	<select id="getPostList" resultType="postvo">
	    <![CDATA[
			SELECT POST_SEQ as postSeq,
			       TITLE as title,
			       CONTENTS as contents, 
			       REVIEW_PUB_YN as reviewPubYn, 
			       USR_SEQ as usrSeq, 
			       TRV_SEQ as trvSeq
			  FROM POST
		]]>
	</select>

	<select id="getUserPostList" resultType="reviewvo"
		parameterType="map">
	    <![CDATA[
			select p.trv_Seq as trvSeq,
				   p.post_seq as postSeq,
				   p.title,
				   p.contents,
				   p.usr_seq as usrSeq,
				   p.crt_date as crtDate
				from post p, users u, travel_info t
			  where p.USR_SEQ = u.USR_SEQ
				and p.trv_Seq = t.trv_Seq
			  and p.usr_seq = #{usrSeq }
	order by p.crt_date desc
		limit #{page}, 3
		]]>
	</select>
	
	<select id="getEditedPostList" resultType="postvo"
		parameterType="reviewvo">
	    <![CDATA[
			select p.trv_Seq as trvSeq,
				   p.post_seq as postSeq,
				   p.title,
				   p.contents,
				   p.usr_seq as usrSeq,
				   p.crt_date as crtDate
				from post p, users u, travel_info t
			  where p.USR_SEQ = u.USR_SEQ
				and p.trv_Seq = t.trv_Seq
			  and p.usr_seq = #{usrSeq }
			  and p.post_seq =#{postSeq}
		]]>
	</select>

	<select id="getTotalCounts" resultType="integer" parameterType="integer">
	    <![CDATA[
			select count(*)
		  		from post
		  	where usr_seq = #{usrSeq }
		]]>
	</select>

	<select id="getReviewsByLikes" resultType="reviewvo" parameterType="integer">
	    <![CDATA[
		 select  z.title as title,
		 		 z.contents as contents, 
		 		 z.post_seq as postSeq, 
				 count(c.post_seq) as likeCount, 
				 z.crt_date as crtDate, 
				 z.review_pub_yn as reviewPubYn,
				 z.trv_seq as trvSeq
		from (select a.contents, a.post_seq, a.crt_date, a.review_pub_yn, a.trv_seq, a.title from post a, travel_info b where a.trv_seq = b.trv_seq and a.REVIEW_PUB_YN='Y'
						 and b.trv_seq=#{trvSeq} ) z left join post_like c on z.POST_SEQ = c.post_seq 
					   and z.REVIEW_PUB_YN='Y' and z.trv_seq=#{trvSeq}			
				   group by ifnull(c.post_seq, UUID()) order by likeCount desc;
	]]>
	</select>

	<select id="selectbyno" resultType="postvo" parameterType="integer">
		<![CDATA[
			SELECT POST_SEQ as postSeq,
			       TITLE as title,
			       CONTENTS as contents, 
			       REVIEW_PUB_YN as reviewPubYn, 
			       USR_SEQ as usrSeq, 
			       TRV_SEQ as trvSeq
			  FROM POST
			 WHERE POST_SEQ = #{postSeq }
		]]>
	</select>

	<!-- <select id="selectbytravelseq" resultType="postvo" parameterType="integer"> 
		<![CDATA[ SELECT POST_SEQ as postSeq, TITLE as title, CONTENTS as contents, 
		REVIEW_PUB_YN as reviewPubYn, USR_SEQ as usrSeq, TRV_SEQ as trvSeq, CRT_DATE 
		as crtDate FROM POST WHERE TRV_SEQ = #{trvSeq } AND REVIEW_PUB_YN = 'Y' ]]> 
		</select> -->

	<select id="selectbytravelseq" resultType="reviewvo"
		parameterType="integer">
		<![CDATA[
			select  z.title as title,
		 		 z.contents as contents, 
		 		 z.post_seq as postSeq, 
				 count(c.post_seq) as likeCount, 
				 z.crt_date as crtDate, 
				 z.review_pub_yn as reviewPubYn,
				 z.trv_seq as trvSeq
			from (select a.contents, a.post_seq, a.crt_date, a.review_pub_yn, a.trv_seq, a.title from post a, travel_info b where a.trv_seq = b.trv_seq and a.REVIEW_PUB_YN='Y'
				  and b.trv_seq=#{trvSeq} order by a.crt_Date desc) z 
		   left join post_like c on z.POST_SEQ = c.post_seq 
		    and z.REVIEW_PUB_YN='Y' and z.trv_seq=#{trvSeq}		
			group by ifnull(c.post_seq, UUID())
		]]>
	</select>

	<select id="getAddPostList" resultType="reviewvo" parameterType="integer">
		<![CDATA[
			select p.post_seq as postSeq,
				   title,
				   contents,
				   path,
				   file_name as fileName,
				   p.crt_date as crtDate
				   		from post p, post_pic pp
			   where p.post_seq = pp.post_seq
				  and p.usr_seq = #{usrSeq }
			      and pp.post_seq = (select max(post.post_seq) as postSeq
				  									from post post, post_pic postpic
										where post.POST_SEQ = postpic.POST_SEQ
										  and post.usr_seq = #{usrSeq })
		]]>
	</select>

	<delete id="delete" parameterType="postvo">
		<![CDATA[
			DELETE 
			  FROM POST
			 WHERE POST_SEQ = #{postSeq }
		]]>
	</delete>

	<select id="getPostListbyPoolSeq" resultType="reviewvo"
		parameterType="map">
		<![CDATA[
			select p.post_seq as postSeq,
				   title,
				   contents,
				   p.usr_seq as usrSeq,
				   p.crt_date as crtDate
			 from post p, pool_post pp
			where p.POST_SEQ = pp.POST_SEQ
			  and pp.POOL_SEQ = #{poolSeq }
			order by p.crt_date desc
			limit #{page}, 5
		]]>
	</select>


	<update id="increasePostLike" parameterType="map">
		<![CDATA[
	insert into post_like values(null, #{postSeq}, #{usrSeq}, now())
	]]>
	</update>

	<select id="checkPostLike" resultType="Integer" parameterType="map">
		<![CDATA[
	select ifnull(post_seq, 0) as postSeq from post_like where usr_seq=#{usrSeq} and post_seq=#{postSeq}		
		]]>
	</select>


	<delete id="decreasePostLike" parameterType="map">
		<![CDATA[
	delete from post_like where usr_seq=#{usrSeq} and post_seq=#{postSeq}
	]]>
	</delete>

	<select id="selectPostLike" resultType="postvo" parameterType="map">
		<![CDATA[
	select a.post_seq as postSeq 
	from post a, post_like b 
	where a.POST_SEQ = b.post_seq and trv_seq=#{trvSeq} and b.usr_seq=#{usrSeq}
	]]>
	</select>

	<select id="selectAllPostSeqOfTravelInfo" resultType="postvo"
		parameterType="integer">
	<![CDATA[
	select post_seq from post where trv_seq=#{trvSeq}
	]]>
	</select>
	
	

</mapper>
