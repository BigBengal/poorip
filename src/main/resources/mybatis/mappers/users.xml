<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">

	<!-- 유저 정보가 있는 지 확인 -->
	<select id="isexistuser" resultType="int" parameterType="uservo">
		<![CDATA[
			select count(*)
			from users
			where usr_email = #{usrEmail }
		]]>
	</select>

	<!-- 닉네임 중복 있는 지 확인 -->
	<select id="isexistnick" resultType="int" parameterType="uservo">
		<![CDATA[
			SELECT COUNT(*)
			FROM USERS
			WHERE USR_NICK = #{usrNick }
		]]>
	</select>

	<!-- 테스트 리스트 가져오기-->
	<select id="getList" resultType="uservo">
		<![CDATA[
			select USR_SEQ		as usrSeq,
			  	   USR_EMAIL	as usrEmail,
			  	   USR_PROFILE 	as usrProfile, 
			  	   USR_GENDER 	as usrGender,  
			  	   USR_LANG 	as usrLang,
			  	   USR_BD 		as usrBd,  
			  	   USR_NICK 	as usrNick,  
			  	   USR_INFO 	as usrInfo,  
			  	   USR_HASHTAG 	as usrHashtag,  
			  	   USR_PREF1 	as usrPref1,  
			  	   USR_PREF2 	as usrPref2,  
			  	   USR_PREF3 	as usrPref3,  
			  	   USR_PREF4 	as usrPref4,  
			  	   USR_PREF5 	as usrPref5,  
			  	   USR_NOTI 	as usrNoti,  
			  	   USR_JOIN_DATE 	as usrJoinDate,  
			  	   USR_LOGIN_DATE 	as usrLoginDate,  
			  	   USR_BLACK_YN  	as usrBlackYN
			from users 
		]]>
	</select>
	
	<!-- 유저 검색해서 리스트 가져오기-->
	<select id="getListbykeyword" resultType="uservo" parameterType="uservo">
		<![CDATA[
			select USR_SEQ		as usrSeq,
			  	   USR_EMAIL	as usrEmail,
			  	   USR_PROFILE 	as usrProfile, 
			  	   USR_GENDER 	as usrGender,  
			  	   USR_LANG 	as usrLang,
			  	   USR_BD 		as usrBd,  
			  	   USR_NICK 	as usrNick,  
			  	   USR_INFO 	as usrInfo,  
			  	   USR_HASHTAG 	as usrHashtag,  
			  	   USR_PREF1 	as usrPref1,  
			  	   USR_PREF2 	as usrPref2,  
			  	   USR_PREF3 	as usrPref3,  
			  	   USR_PREF4 	as usrPref4,  
			  	   USR_PREF5 	as usrPref5,  
			  	   USR_NOTI 	as usrNoti,  
			  	   USR_JOIN_DATE 	as usrJoinDate,  
			  	   USR_LOGIN_DATE 	as usrLoginDate,  
			  	   USR_BLACK_YN  	as usrBlackYN
			from users 
		]]>
	</select>

		

	<!-- 새로운 유저 입력 -->
	<insert id="insert" parameterType="uservo">
		<![CDATA[
			insert 
			  into users ( USR_EMAIL,  USR_PROFILE,  USR_GENDER,  USR_LANG,  USR_BD,  USR_NICK,  USR_INFO,  USR_HASHTAG,  USR_PREF1,  USR_PREF2,  USR_PREF3,  USR_PREF4,  USR_PREF5,  USR_NOTI   )
			values ( #{usrEmail }, #{usrProfile }, #{usrGender }, #{usrLang }, ${usrBd }, #{usrNick }, #{usrInfo }, #{usrHashtag }, #{usrPref1 }, #{usrPref2 }, #{usrPref3 }, #{usrPref4 }, #{usrPref5 }, #{usrNoti }) 
		]]>
	</insert>

	<!-- 프로필 수정에 표시할 내용 불러오기 -->
	<select id="selectbyemail" resultType="uservo" parameterType="uservo">
		<![CDATA[
			select USR_SEQ		as usrSeq,
			  	   USR_EMAIL	as usrEmail,
			  	   USR_PROFILE 	as usrProfile, 
			  	   USR_GENDER 	as usrGender,  
			  	   USR_LANG 	as usrLang,
			  	   USR_BD 		as usrBd,  
			  	   USR_NICK 	as usrNick,  
			  	   USR_INFO 	as usrInfo,  
			  	   USR_HASHTAG 	as usrHashtag,  
			  	   USR_PREF1 	as usrPref1,  
			  	   USR_PREF2 	as usrPref2,  
			  	   USR_PREF3 	as usrPref3,  
			  	   USR_PREF4 	as usrPref4,  
			  	   USR_PREF5 	as usrPref5,  
			  	   USR_NOTI 	as usrNoti,  
			  	   USR_JOIN_DATE 	as usrJoinDate,  
			  	   USR_LOGIN_DATE 	as usrLoginDate,  
			  	   USR_BLACK_YN  	as usrBlackYN
			from users 
			where usr_email = #{usrEmail }
		]]>
	</select>
	
	<!-- 사용자 로그인 정보 업데이트 -->
	<update id="updatelogin" parameterType="uservo">
	<![CDATA[
		update users 
		   set USR_LOGIN_DATE = now() 
		 where usr_seq = #{usrSeq }
	]]>
	</update>
	
	<!-- 사용자 언어 설정 정보 업데이트 -->
	<update id="updatelang" parameterType="uservo">
	<![CDATA[
		update users 
		   set USR_LANG = #{usrLang }
		 where usr_seq = #{usrSeq }
	]]>
	</update>
	
	<!-- 사용자 로그인 정보 업데이트 -->
	<update id="updategender" parameterType="uservo">
	<![CDATA[
		update users 
		   set USR_GENDER =  #{usrGender }  
		 where usr_seq = #{usrSeq }
	]]>
	</update>

	<!-- 사용자 닉네임 정보 업데이트 -->
	<update id="updatenick" parameterType="uservo">
	<![CDATA[
		update users 
		   set USR_NICK = #{usrNick}
		 where usr_seq = #{usrSeq }
	]]>
	</update>
	
	<!-- 사용자 생년월일 정보 업데이트 -->
	<update id="updatebirthday" parameterType="uservo">
	<![CDATA[
		UPDATE USERS 
		   SET USR_BD = ${usrBd }
		 WHERE USR_SEQ = #{usrSeq }
	]]>
	</update>

	<!-- 사용자 취향 정보 업데이트 -->
	<update id="updateprefer" parameterType="uservo">
	<![CDATA[
		update users 
		   set USR_PREF1 = #{usrPref1 },  
		  	   USR_PREF2 = #{usrPref2 },  
		  	   USR_PREF3 = #{usrPref3 },  
		  	   USR_PREF4 = #{usrPref4 },  
		  	   USR_PREF5 = #{usrPref5 }  
		 where usr_seq = #{usrSeq }
	]]>
	</update>


	<!-- 사용자 자기소개/해쉬태그 정보 업데이트 -->
	<update id="updateinfohash" parameterType="uservo">
	<![CDATA[
		update users 
		   set usr_info = #{usrInfo },
		       usr_hashtag = #{usrHashtag } 
		 where usr_seq = #{usrSeq }
	]]>
	</update>

	<!-- 노티피케이션 수정 -->
	<update id="updatenoti" parameterType="uservo">
		<![CDATA[
			update users 
			   set usr_noti = #{usrNoti} 
			 where usr_seq = #{usrSeq }
		]]>
	</update>

	<!-- 블랙리스트 추가 -->
	<update id="updateblack" parameterType="uservo">
		<![CDATA[
			update users 
			   set usr_black_yn = #{usrBlackYN}
			 where usr_seq = #{usrSeq }
		]]>
	</update>

	<!-- 사용자 삭제 -->
	<delete id="delete" parameterType="uservo">
		<![CDATA[
			delete 
			  from users
			 where usr_seq = #{usrSeq }
		]]>
	</delete>

</mapper>